{"version":3,"sources":["index.js"],"names":["Square","props","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","className","onClick","value","Board","i","_this","this","squares","renderSquare","React","Component","Game","_this2","Object","D_Temp_react_tutorial_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","D_Temp_react_tutorial_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","D_Temp_react_tutorial_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","state","history","Array","fill","nextPlayerSymbol","moveIndex","_this3","board","winner","checkWinner","status","moves","map","index","desc","key","jumpTo","handleClick","slice","length","setState","concat","some","line","_line","D_Temp_react_tutorial_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","b","c","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bf5006cb.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nfunction Square(props) {\r\n    return (\r\n        <button className=\"square\" onClick={props.onClick}>\r\n            {props.value}\r\n        </button>\r\n    );\r\n}\r\n\r\nclass Board extends React.Component {\r\n    renderSquare(i) {\r\n        return (\r\n            <Square\r\n                value={this.props.squares[i]}\r\n                onClick={() => this.props.onClick(i)}\r\n            />\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"board-row\">\r\n                    {this.renderSquare(0)}\r\n                    {this.renderSquare(1)}\r\n                    {this.renderSquare(2)}\r\n                </div>\r\n                <div className=\"board-row\">\r\n                    {this.renderSquare(3)}\r\n                    {this.renderSquare(4)}\r\n                    {this.renderSquare(5)}\r\n                </div>\r\n                <div className=\"board-row\">\r\n                    {this.renderSquare(6)}\r\n                    {this.renderSquare(7)}\r\n                    {this.renderSquare(8)}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass Game extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            history: [\r\n                {squares: Array(9).fill(null)},\r\n            ],\r\n            nextPlayerSymbol: 'X',\r\n            moveIndex: 0,\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const history = this.state.history;\r\n        const board = history[this.state.moveIndex];\r\n        const winner = checkWinner(board.squares);\r\n\r\n        let status = '';\r\n        if (winner) {\r\n            status = 'Winner: ' + winner;\r\n        } else {\r\n            status = 'Next player: ' + this.state.nextPlayerSymbol;\r\n        }\r\n\r\n        const moves = history.map((value, index) => {\r\n            const desc = index > 0 ? 'Go to move #' + index : 'Go to game start';\r\n            return (\r\n                <li key={index}>\r\n                    <button onClick={() => this.jumpTo(index)}>{desc}</button>\r\n                </li>\r\n            );\r\n        });\r\n\r\n        return (\r\n            <div className=\"game\">\r\n                <div className=\"game-board\">\r\n                    <Board\r\n                        squares={board.squares}\r\n                        onClick={(i) => this.handleClick(i)}\r\n                    />\r\n                </div>\r\n                <div className=\"game-info\">\r\n                    <div>{status}</div>\r\n                    <ol>{moves}</ol>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    handleClick(i) {\r\n        const history = this.state.history.slice(0, this.state.moveIndex + 1);\r\n        const board = history[history.length - 1];\r\n        const squares = board.squares.slice();\r\n        if (checkWinner(squares) || squares[i]) {\r\n            return;\r\n        }\r\n\r\n        squares[i] = this.state.nextPlayerSymbol;\r\n        this.setState({\r\n            history: history.concat([{\r\n                squares: squares,\r\n            }]),\r\n            moveIndex: history.length,\r\n            nextPlayerSymbol: this.state.nextPlayerSymbol === 'X' ? 'O' : 'X',\r\n        });\r\n    }\r\n\r\n    jumpTo(i) {\r\n        this.setState({\r\n            moveIndex: i,\r\n            nextPlayerSymbol: (i % 2) === 0 ? 'X' : 'O',\r\n        });\r\n    }\r\n}\r\n\r\nfunction checkWinner(squares) {\r\n    const lines = [\r\n        [0, 1, 2],\r\n        [3, 4, 5],\r\n        [6, 7, 8],\r\n        [0, 3, 6],\r\n        [1, 4, 7],\r\n        [2, 5, 8],\r\n        [0, 4, 8],\r\n        [2, 4, 6],\r\n    ];\r\n\r\n    let winner = null;\r\n    lines.some((line) => {\r\n        const [a, b, c] = line;\r\n        if (squares[a]\r\n            && squares[a] === squares[b]\r\n            && squares[a] === squares[c]) {\r\n            winner = squares[a];\r\n            return true;\r\n        }\r\n        return false;\r\n    });\r\n\r\n    return winner;\r\n}\r\n\r\n// ========================================\r\n\r\nReactDOM.render(\r\n    <Game />,\r\n    document.getElementById('root')\r\n);\r\n  "],"sourceRoot":""}